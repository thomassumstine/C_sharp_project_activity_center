// <auto-generated />
using System;
using DojoActivityCenter.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DojoActivityCenter.Migrations
{
    [DbContext(typeof(DojoActivityCenterContext))]
    partial class DojoActivityCenterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DojoActivityCenter.Models.ActivityEvent", b =>
                {
                    b.Property<int>("ActivityEventId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ActivityType")
                        .IsRequired();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<uint>("Duration");

                    b.Property<string>("DurationTimeUnit");

                    b.Property<int>("EventCoordinatorId");

                    b.Property<DateTime>("Time");

                    b.HasKey("ActivityEventId");

                    b.HasIndex("EventCoordinatorId");

                    b.ToTable("ActivityEvent");
                });

            modelBuilder.Entity("DojoActivityCenter.Models.Join", b =>
                {
                    b.Property<int>("JoinId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActivityEventId");

                    b.Property<int>("UserId");

                    b.HasKey("JoinId");

                    b.HasIndex("ActivityEventId");

                    b.HasIndex("UserId");

                    b.ToTable("Join");
                });

            modelBuilder.Entity("DojoActivityCenter.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DojoActivityCenter.Models.ActivityEvent", b =>
                {
                    b.HasOne("DojoActivityCenter.Models.User", "EventCoordinator")
                        .WithMany("ActivityEvent")
                        .HasForeignKey("EventCoordinatorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DojoActivityCenter.Models.Join", b =>
                {
                    b.HasOne("DojoActivityCenter.Models.ActivityEvent", "activityEvent")
                        .WithMany("Participants")
                        .HasForeignKey("ActivityEventId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DojoActivityCenter.Models.User", "user")
                        .WithMany("Attending")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
